/* tslint:disable */
/* eslint-disable */
/**
 * Edison Backend API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information about the logged-in user (for dev purposes).
 * @export
 * @interface UserInfo
 */
export interface UserInfo {
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    issuerId: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    nickname?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    username?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserInfo
     */
    permissions?: Array<string>;
}

/**
 * Check if a given object implements the UserInfo interface.
 */
export function instanceOfUserInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "issuerId" in value;

    return isInstance;
}

export function UserInfoFromJSON(json: any): UserInfo {
    return UserInfoFromJSONTyped(json, false);
}

export function UserInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'issuerId': json['issuerId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'nickname': !exists(json, 'nickname') ? undefined : json['nickname'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'permissions': !exists(json, 'permissions') ? undefined : json['permissions'],
    };
}

export function UserInfoToJSON(value?: UserInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'issuerId': value.issuerId,
        'name': value.name,
        'email': value.email,
        'nickname': value.nickname,
        'username': value.username,
        'permissions': value.permissions,
    };
}

